-- O Sistema Gerenciador de Banco de Dados usada no projeto Ã© o Oracle

CREATE TABLE USUARIO(
    CPF CHAR(14) NOT NULL,
    EMAIL VARCHAR2(30) NOT NULL,
    NOME VARCHAR2(50) NOT NULL,
    DATA_NASC DATE NOT NULL,
    RUA VARCHAR2(50) NOT NULL,
    NUMERO NUMBER(5),
    CEP CHAR(9),

    CONSTRAINT PK_USUARIO PRIMARY KEY(CPF),
    CONSTRAINT UC_USUARIO UNIQUE(EMAIL),
    CONSTRAINT CK_USUARIO_CPF CHECK(REGEXP_LIKE(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}')),
    CONSTRAINT CK_USUARIO_RUA_NUMERO CHECK(NUMERO >= 0),
    CONSTRAINT CK_USUARIO_CEP CHECK(REGEXP_LIKE(CEP,'^\d{5}-\d{3}$'))
);

-- Trigger para ID sequencial dos animais
CREATE SEQUENCE id_animal
    START WITH 1;

CREATE OR REPLACE TRIGGER incremento
    BEFORE INSERT ON ANIMAL
    FOR EACH ROW
BEGIN
    SELECT id_animal.NEXTVAL
    INTO :new.ID
    FROM DUAL;
END;
/

CREATE TABLE ANIMAL(
    ID NUMBER(6) NOT NULL,
    NOME VARCHAR2(15),
    IDADE NUMBER(2),
    TIPO CHAR(1) NOT NULL,
    GENERO CHAR(1),
    RACA VARCHAR2(20),
    PORTE VARCHAR2(7),
    CASTRADO CHAR(1),

    CONSTRAINT CK_TIPO_ANIMAL CHECK(TIPO IN ('C', 'F')),
    CONSTRAINT CK_GENERO_ANIMAL CHECK(GENERO IN ('M', 'F')),
    CONSTRAINT CK_PORTE_ANIMAL CHECK(UPPER(PORTE) IN ('PEQUENO', 'MEDIO', 'GRANDE')),
    CONSTRAINT CK_CASTRADO_ANIMAL CHECK(CASTRADO IN ('S', 'N')),
    CONSTRAINT PK_ANIMAL PRIMARY KEY(ID)
);

CREATE TABLE FUNCIONARIO(
    CPF CHAR(14) NOT NULL,
    EMAIL VARCHAR2(30) NOT NULL,
    NOME VARCHAR2(50) NOT NULL,
    DATA_NASC DATE NOT NULL,
    RUA VARCHAR2(50) NOT NULL,
    NUMERO NUMBER(5),
    CEP CHAR(9),

    CONSTRAINT PK_FUNCIONARIO PRIMARY KEY(CPF),
    CONSTRAINT UC_FUNCIONARIO UNIQUE(EMAIL),
    CONSTRAINT CK_FUNCIONARIO_CPF CHECK(REGEXP_LIKE(CPF, '[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}')),
    CONSTRAINT CK_FUNCIONARIO_RUA_NUMERO CHECK(NUMERO >= 0),
    CONSTRAINT CK_FUNCIONARIO_CEP CHECK(REGEXP_LIKE(CEP,'^\d{5}-\d{3}$'))
);

CREATE TABLE VISITA(
    CPF_USUARIO CHAR(14) NOT NULL,
    ANIMAL NUMBER(6) NOT NULL,
    DATA_HORARIO DATE NOT NULL,
    DURACAO DATE NOT NULL,

    CONSTRAINT FK_VISITA_USUARIO FOREIGN KEY(CPF_USUARIO) REFERENCES USUARIO(CPF),
    CONSTRAINT FK_VISITA_ANIMAL FOREIGN KEY(ANIMAL) REFERENCES ANIMAL(ID),
    CONSTRAINT PK_VISITA PRIMARY KEY(CPF_USUARIO, ANIMAL, DATA_HORARIO)
);

CREATE TABLE ADOCAO(
    CPF_USUARIO CHAR(14) NOT NULL,
    ANIMAL NUMBER(6) NOT NULL,
    CPF_FUNCIONARIO CHAR(14) NOT NULL,
    DATA_ADOCAO DATE NOT NULL,

    CONSTRAINT FK_ADOCAO_USUARIO FOREIGN KEY(CPF_USUARIO) REFERENCES USUARIO(CPF),
    CONSTRAINT FK_ADOCAO_ANIMAL FOREIGN KEY(ANIMAL) REFERENCES ANIMAL(ID),
    CONSTRAINT FK_ADOCAO_FUNCIONARIO FOREIGN KEY(CPF_FUNCIONARIO) REFERENCES FUNCIONARIO(CPF),
    CONSTRAINT PK_ADOCAO PRIMARY KEY(CPF_USUARIO, ANIMAL)
);

CREATE TABLE NECESSIDADES_ANIMAL(
    ID_ANIMAL NUMBER(6) NOT NULL,
    NECESSIDADE VARCHAR2(30) NOT NULL,

    CONSTRAINT FK_NECESSIDADE_ANIMAL FOREIGN KEY(ID_ANIMAL) REFERENCES ANIMAL(ID),
    CONSTRAINT PK_NECESSIDADE PRIMARY KEY(ID_ANIMAL, NECESSIDADE)
);

CREATE TABLE HISTORICO_SAUDE(
    ID_ANIMAL NUMBER(6) NOT NULL,
    HISTORICO_SAUDE VARCHAR2(30) NOT NULL,

    CONSTRAINT FK_HISTORICO_SAUDE_ANIMAL FOREIGN KEY(ID_ANIMAL) REFERENCES ANIMAL(ID),
    CONSTRAINT PK_HISTORICO_SAUDE PRIMARY KEY(ID_ANIMAL, HISTORICO_SAUDE)
);

CREATE TABLE VACINAS(
    ID_ANIMAL NUMBER(6) NOT NULL,
    VACINA VARCHAR2(30) NOT NULL,

    CONSTRAINT FK_VACINA_ANIMAL FOREIGN KEY(ID_ANIMAL) REFERENCES ANIMAL(ID),
    CONSTRAINT PK_VACINA PRIMARY KEY(ID_ANIMAL, VACINA)
);